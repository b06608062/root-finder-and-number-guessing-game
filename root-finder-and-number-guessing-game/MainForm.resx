<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAEgiIiJ+AAAA/wIC
        Ap4AAAAUAAAAAAAAAAAaGhoUBQUFnQAAAP8uLi6KAAAASAAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAElJ
        SQcAAAAYAAAACwAAAAAAAAAAAAAAAAAAAAAAAAALAAAAGFVVVQkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>